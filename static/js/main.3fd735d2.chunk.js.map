{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","reportWebVitals.js","index.js"],"names":["AddTask","props","minDate","Date","toISOString","slice","useState","name","setName","checked","setChecked","date","setDate","content","setContent","className","type","placeholder","spellCheck","onChange","e","target","value","min","onClick","addTask","console","log","Task","finish","task","id","active","important","finishDate","toLocaleString","style","color","changeStatus","delete","TaskList","taskList","tasks","filter","map","sampleTasks","App","setTasks","handleDeleteTask","length","newTask","forEach","getTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAgFeA,G,YA7EC,SAACC,GACf,IAAIC,GAAU,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IADvB,EAEDC,mBAAS,IAFR,mBAElBC,EAFkB,KAEZC,EAFY,OAGKF,oBAAS,GAHd,mBAGlBG,EAHkB,KAGTC,EAHS,OAIDJ,mBAASJ,GAJR,mBAIlBS,EAJkB,KAIZC,EAJY,OAKKN,mBAAS,IALd,mBAKlBO,EALkB,KAKTC,EALS,KA+BzB,OACE,qCACE,wBAAQC,UAAU,qBAAlB,SACE,kDAEF,uBACEA,UAAU,oBACVC,KAAK,OACLC,YAAY,OACZC,YAAY,EACZC,SA/BmB,SAACC,GACxBZ,EAAQY,EAAEC,OAAOC,QA+BbA,MAAOf,IAET,qBAAKQ,UAAU,kBAAf,SACE,uBACEA,UAAU,mBACVC,KAAK,OACLM,MAAOX,EACPY,IAAKrB,EACLiB,SA3CiB,SAACC,GACxBR,EAAQQ,EAAEC,OAAOC,YA6Cf,0BACEP,UAAU,mBACVC,KAAK,OACLC,YAAY,6BACZE,SAzCsB,SAACC,GAC3BN,EAAWM,EAAEC,OAAOC,QAyChBA,MAAOT,IAET,sBAAKE,UAAU,YAAf,UACE,uBACEC,KAAK,WACLD,UAAU,wBACVN,QAASA,EACTU,SApDY,SAACC,GACnBV,EAAWU,EAAEC,OAAOZ,YAqDhB,uBAAOM,UAAU,kBAAjB,yBAEF,yBAAQA,UAAU,qBAAqBS,QAlDjB,WACZvB,EAAMwB,QAAQlB,EAAMM,EAASJ,EAASE,IAEhDH,EAAQ,IACRM,EAAW,IACXJ,GAAW,GACXE,EAAQV,IAERwB,QAAQC,IAAI,0CA0CZ,UACG,IADH,mBChCSC,G,KArCF,SAAC3B,GACZ,IAGI4B,EAJkB,EAK6C5B,EAAM6B,KAAjEvB,EALc,EAKdA,KAAMM,EALQ,EAKRA,QAASF,EALD,EAKCA,KAAMoB,EALP,EAKOA,GAAIC,EALX,EAKWA,OAAQC,EALnB,EAKmBA,UAAWC,EAL9B,EAK8BA,WAGpD,OADUL,EAAVG,EAAmB,KAAkB,IAAI7B,KAAK+B,GAAYC,iBAExD,sBAAKpB,UAAU,eAAf,UACE,wBAAQA,UAAU,uBAAuBqB,MAAOH,EATtC,CACZI,MAAO,OAQ+D,KAApE,SACG9B,IAEH,mBAAGQ,UAAU,wBAAb,SAAsCF,IACtC,sBAAKE,UAAU,uBAAf,UACE,sBAAMA,UAAU,yBAAhB,SACGiB,EAAM,oBAAgBrB,GAAhB,uBAAyCkB,KAEjDG,GACC,wBACEjB,UAAU,sBACVS,QAAS,kBAAMvB,EAAMqC,aAAaP,IAFpC,oBAOF,wBACEhB,UAAU,uBACVS,QAAS,kBAAMvB,EAAMsC,OAAOR,IAF9B,uBCAOS,EA1BE,SAACvC,GAAW,IACnB+B,EAAW/B,EAAX+B,OAEFS,EADQxC,EAAMyC,MAAMC,QAAO,SAACb,GAAD,OAAUA,EAAKE,SAAWA,KACpCY,KAAI,SAACd,GAAD,OACzB,6BACE,cAAC,EAAD,CAEEA,KAAMA,EACNQ,aAAcrC,EAAMqC,aACpBC,OAAQtC,EAAMsC,QAHTT,EAAKC,KAFLD,EAAKC,OAUhB,OACE,qCACE,wBAAQhB,UAAU,qBAAlB,SACE,+BAAOiB,EAAS,eAAiB,qBAInC,oBAAIjB,UAAU,eAAd,SAA8B0B,QCpB9BI,EAAc,CAClB,CACEd,GAAI,EACJxB,KAAM,oCACNM,QAAS,6DACTF,KAAM,aACNsB,WAAW,EACXD,QAAQ,EACRE,WAAY,OA2EDY,EAvEH,WAAO,IAAD,EACUxC,mBAASuC,GADnB,mBACTH,EADS,KACFK,EADE,KAcVC,EAAmB,SAACjB,GACxB,IAAIU,EAAQ,YAAOC,GACnBD,EAAWA,EAASE,QAAO,SAACb,GAAD,OAAUA,EAAKC,KAAOA,KACjDgB,EAASN,IA2BX,OACE,mCACE,sBAAK1B,UAAU,YAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,wCAEF,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,cAAC,EAAD,CAASU,QAhCH,SAAClB,EAAMM,EAASJ,EAASE,GACvCe,QAAQC,IAAIpB,EAAMM,EAASJ,EAASE,GACpC,IACIoB,EADAU,EAAQ,YAAOC,GAKnB,GAFKX,EADLU,EAASQ,OAAS,EACRR,EAASA,EAASQ,OAAS,GAAGlB,GAAK,EACnC,EACNxB,EAAK0C,OAAS,EAAG,CACnB,IAAMC,EAAU,CACdnB,GAAIA,EACJxB,KAAMA,EACNM,QAASA,EACTF,KAAMA,EACNsB,UAAWxB,EACXuB,QAAQ,EACRE,WAAY,MAGd,OADAa,EAAS,GAAD,mBAAKN,GAAL,CAAeS,MAChB,EAEP,OAAO,OAcH,qBAAKnC,UAAU,6BAAf,SACE,cAAC,EAAD,CACEiB,QAAQ,EACRU,MAAOA,EACPJ,aAvDmB,SAACP,GAC9B,IAAMU,EAAQ,YAAOC,GACrBD,EAASU,SAAQ,SAACrB,GACZA,EAAKC,KAAOA,IACdD,EAAKE,QAAS,EACdF,EAAKI,YAAa,IAAI/B,MAAOiD,cAGjCL,EAASN,IAgDCF,OAAQS,MAGZ,qBAAKjC,UAAU,+BAAf,SACE,cAAC,EAAD,CAAUiB,QAAQ,EAAOU,MAAOA,EAAOH,OAAQS,eCnE5CK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3fd735d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nconst AddTask = (props) => {\r\n  let minDate = new Date().toISOString().slice(0, 10);\r\n  const [name, setName] = useState(\"\");\r\n  const [checked, setChecked] = useState(false);\r\n  const [date, setDate] = useState(minDate);\r\n  const [content, setContent] = useState(\"\");\r\n\r\n  const handleDateChange = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n  const handleNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleCheck = (e) => {\r\n    setChecked(e.target.checked);\r\n  };\r\n  const handleContentChange = (e) => {\r\n    setContent(e.target.value);\r\n  };\r\n  const handleButtonClick = () => {\r\n    const add = props.addTask(name, content, checked, date);\r\n    if (add) {\r\n      setName(\"\");\r\n      setContent(\"\");\r\n      setChecked(false);\r\n      setDate(minDate);\r\n    } else {\r\n      console.log(\"Błąd przy dodawaniu zadania\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"tasks__add__header\">\r\n        <span>Add new task</span>\r\n      </header>\r\n      <input\r\n        className=\"tasks__add__input\"\r\n        type=\"text\"\r\n        placeholder=\"Name\"\r\n        spellCheck={false}\r\n        onChange={handleNameChange}\r\n        value={name}\r\n      />\r\n      <div className=\"date__container\">\r\n        <input\r\n          className=\"tasks__add__date\"\r\n          type=\"date\"\r\n          value={date}\r\n          min={minDate}\r\n          onChange={handleDateChange}\r\n        ></input>\r\n      </div>\r\n      <textarea\r\n        className=\"tasks__add__text\"\r\n        type=\"text\"\r\n        placeholder=\"What would you like to do?\"\r\n        onChange={handleContentChange}\r\n        value={content}\r\n      ></textarea>\r\n      <div className=\"important\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"tasks__add__important\"\r\n          checked={checked}\r\n          onChange={handleCheck}\r\n        />\r\n        <label className=\"important_label\">Priority</label>\r\n      </div>\r\n      <button className=\"tasks__add--submit\" onClick={handleButtonClick}>\r\n        {\" \"}\r\n        Add Task\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport \"./TaskList.css\";\r\n\r\nconst Task = (props) => {\r\n  const style = {\r\n    color: \"red\",\r\n  };\r\n  let finish;\r\n  const { name, content, date, id, active, important, finishDate } = props.task;\r\n\r\n  active ? (finish = null) : (finish = new Date(finishDate).toLocaleString());\r\n  return (\r\n    <div className=\"active__task\">\r\n      <header className=\"active__task__header\" style={important ? style : null}>\r\n        {name}\r\n      </header>\r\n      <p className=\"active__task__content\">{content}</p>\r\n      <div className=\"active__task__bottom\">\r\n        <span className=\"active__task__deadline\">\r\n          {active ? `deadline: ${date}` : `finished on: ${finish}`}\r\n        </span>\r\n        {active && (\r\n          <button\r\n            className=\"active__task--finsh\"\r\n            onClick={() => props.changeStatus(id)}\r\n          >\r\n            Finish\r\n          </button>\r\n        )}\r\n        <button\r\n          className=\"active__task--delete\"\r\n          onClick={() => props.delete(id)}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n\r\n// if (active) {\r\n//   return (\r\n//     <div className=\"active__task\">\r\n//       <header\r\n//         className=\"active__task__header\"\r\n//         style={important ? style : null}\r\n//       >\r\n//         {name}\r\n//       </header>\r\n//       <p className=\"active__task__content\">{content}</p>\r\n//       <div className=\"active__task__bottom\">\r\n//         <span className=\"active__task__deadline\">\r\n//           {active ? `deadline: ${date}` : `finished on: ${finish}`}\r\n//         </span>\r\n//         {active && <button className=\"active__task--finsh\">Finish</button>}\r\n//         <button className=\"active__task--delete\">X</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// } else {\r\n//   return (\r\n//     <div className=\"finished__task\">\r\n//       <p>\r\n//         <strong>{name}</strong>\r\n//         <em>(zrobić do {date})</em>\r\n//         <br />- potwierdzenie wykonania <span> {finish}</span>\r\n//         <button>X</button>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\n","import Task from \"./Task.js\";\r\nimport \"./TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  const { active } = props;\r\n  const tasks = props.tasks.filter((task) => task.active === active);\r\n  const taskList = tasks.map((task) => (\r\n    <li key={task.id}>\r\n      <Task\r\n        key={task.id}\r\n        task={task}\r\n        changeStatus={props.changeStatus}\r\n        delete={props.delete}\r\n      />\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <header className=\"task__list__header\">\r\n        <span>{active ? \"Tasks to do:\" : \"Finished tasks\"}</span>\r\n      </header>\r\n\r\n      {/* <ul className={active ? \"active__list\" : \"finished__list\"}>{taskList}</ul> */}\r\n      <ul className=\"active__list\">{taskList}</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nconst sampleTasks = [\n  {\n    id: 0,\n    name: \"Posprzątać kuchnię\",\n    content: \"Zrobić to zanim przyjedzie Sara bo będzie przyps\",\n    date: \"2021-02-12\",\n    important: false,\n    active: true,\n    finishDate: null,\n  },\n];\n\nconst App = () => {\n  const [tasks, setTasks] = useState(sampleTasks);\n\n  const handleChangeTaskStatus = (id) => {\n    const taskList = [...tasks];\n    taskList.forEach((task) => {\n      if (task.id === id) {\n        task.active = false;\n        task.finishDate = new Date().getTime();\n      }\n    });\n    setTasks(taskList);\n  };\n\n  const handleDeleteTask = (id) => {\n    let taskList = [...tasks];\n    taskList = taskList.filter((task) => task.id !== id);\n    setTasks(taskList);\n  };\n\n  const addTask = (name, content, checked, date) => {\n    console.log(name, content, checked, date);\n    let taskList = [...tasks];\n    let id;\n    taskList.length > 0\n      ? (id = taskList[taskList.length - 1].id + 1)\n      : (id = 0);\n    if (name.length > 0) {\n      const newTask = {\n        id: id,\n        name: name,\n        content: content,\n        date: date,\n        important: checked,\n        active: true,\n        finishDate: null,\n      };\n      setTasks([...taskList, newTask]);\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <header className=\"header\">\n          <span>do</span>\n        </header>\n        <div className=\"tasks\">\n          <div className=\"tasks__child tasks__add\">\n            <AddTask addTask={addTask} />\n          </div>\n          <div className=\"tasks__child tasks__active\">\n            <TaskList\n              active={true}\n              tasks={tasks}\n              changeStatus={handleChangeTaskStatus}\n              delete={handleDeleteTask}\n            />\n          </div>\n          <div className=\"tasks__child tasks__finished\">\n            <TaskList active={false} tasks={tasks} delete={handleDeleteTask} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n\n// const tasks = [\n//   {\n//     id: 0,\n//     name: \"Lorem ipsum dolor sit amet\",\n//     content:\n//       \" Quisque tempus accumsan lobortis. Interdum et malesuada fames ac ante ipsum primis in faucibus.\",\n//     date: \"2018-02-15\",\n//     important: true,\n//     active: true,\n//     finishDate: null,\n//   },\n//   {\n//     id: 1,\n//     name: \"In sit amet rutrum leo\",\n//     content: \"Donec accumsan eleifend felis, non luctus turpis porta eget.\",\n//     date: \"2020-01-01\",\n//     important: false,\n//     active: true,\n//     finishDate: null,\n//   },\n//   {\n//     id: 2,\n//     name: \"Quisque mi eros\",\n//     content:\n//       \" Aenean quis eros tincidunt, euismod orci id, feugiat massa. Suspendisse potenti. Aenean sed venenatis enim.\",\n//     date: \"2020-01-01\",\n//     important: false,\n//     active: true,\n//     finishDate: null,\n//   },\n//   {\n//     id: 3,\n//     name: \"Nullam sollicitudin nibh\",\n//     content:\n//       \"Donec maximus tortor purus, tincidunt maximus dolor aliquam in. Donec commodo velit eros, a rhoncus sem aliquet eget.\",\n//     date: \"2020-01-01\",\n//     important: false,\n//     active: false,\n//     finishDate: null,\n//   },\n//   {\n//     id: 4,\n//     name: \"Morbi nunc velit\",\n//     content:\n//       \"Aenean ac lectus eu quam luctus finibus in sed nunc. Vivamus a diam varius erat vestibulum malesuada ut non ipsum.\",\n//     date: \"2020-01-01\",\n//     important: false,\n//     active: false,\n//     finishDate: null,\n//   },\n//   {\n//     id: 5,\n//     name: \"Interdum et malesuada\",\n//     content:\n//       \"Maecenas luctus varius pulvinar. Aliquam fermentum, massa a dictum pulvinar, dui turpis pretium massa, vel semper nibh lectus non libero.\",\n//     date: \"2020-01-01\",\n//     important: false,\n//     active: false,\n//     finishDate: null,\n//   },\n// ];\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// import \"./components/App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}